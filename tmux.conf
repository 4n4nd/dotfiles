# improve colors
set -g default-terminal 'screen-256color'

# act like vim
#setw -g mode-keys vi
bind -n C-Left  select-pane -L
bind -n C-Down  select-pane -D
bind -n C-Up    select-pane -U
bind -n C-Right select-pane -R
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+
set-option -g status-keys "emacs"

set -g prefix2 C-x

# start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1
set-window-option -g pane-base-index 1

# renumber windows sequentially after closing any of them
set -g renumber-windows on

# soften status bar color from harsh green to light gray
set -g status-bg '#666666'
set -g status-fg '#aaaaaa'

# remove administrative debris (session name, hostname, time) in status bar
set -g status-left ''
set -g status-right ''

# increase scrollback lines
set -g history-limit 10000

# prefix -> back-one-character
#bind-key C-b send-prefix
# prefix-2 -> forward-incremental-history-search
#bind-key C-s send-prefix -2

bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# status bar stuff
set -g status-left-length 40

# Binding to toggle synchronize panes
is_synched='[[ $(tmux show-window-options -v synchronize-panes) == "on" ]]'
bind-key S if-shell "$is_synched" "set-window-option synchronize-panes off" "set-window-option synchronize-panes on"

# Simplify status bar display.
set -g status-left '[#S]'
set -g status-right "#{?pane_synchronized,--SYNCED--,} #(date '+%a, %b %d - %I:%M') "
# set -g status-right ""

# more intuitive keybindings for splitting
bind \ split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# The base index for windows and panes to 1 instead of the default 0.
# # Now prefix 1 is the first window instead of a prefix 0 being the first.
set -g base-index 1
setw -g pane-base-index 1 # not recognized by my tmux

# bind resizing of panes to H,J,K,L (resizes by steps of 10 lines/columns)
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1
bind -n C-S-Left resize-pane -L 10
bind -n C-S-Right resize-pane -R 10
bind -n C-S-Down resize-pane -D 5
bind -n C-S-Up resize-pane -U 5
# mouse tmux 2.0
#set -g mouse-resize-pane on
#set -g mouse-select-pane on
#set -g mouse-select-window on
#setw -g mode-mouse on
# mouse tmux 2.1
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

# copy paste stuff
# Use vim keybindings in copy mode
#setw -g mode-keys vi
#setw -g mode-keys emacs

# Setup 'v' to begin selection as in Vim
#bind-key -t vi-copy v begin-selection
#bind-key -t vi-copy y copy-pipe "xclip -i -selection clipboard"

# Update default binding of `Enter` to also use copy-pipe
#unbind -t vi-copy Enter
#bind-key -t vi-copy Enter copy-pipe "xclip -i -selection clipboard"
bind C-c run "tmux save-buffer - | xclip -selection clipboard &>/dev/null"

# execute fast helpers
bind h split-window -h "htop"
bind k split-window -h "vim ~/src/scratch"
bind t split-window -h "vim ~/src/scratch/TODO.md"

# Easily swap a pane (targeted by pane number) with the current pane
bind s display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"

# think emacs buffers
# Make C-j display a selectable list of sessions
bind C-b choose-tree
#bind C-b split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

# breakout new session
bind C-f send-keys 'tat && exit' 'C-m'

# Dismiss current pane to background window
#bind b break-pane -d

# Local config
if-shell "[ -f ~/.tmux.conf.local ]" 'source ~/.tmux.conf.local'
